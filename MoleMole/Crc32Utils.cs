namespace MoleMole
{
    using System;
    using System.IO;
    using System.Text;

    internal class Crc32Utils
    {
        private static uint seed = 0xf0e1d2c3;
        private static uint[] table = new uint[] { 
            0, 0xfcb9887f, 0x220216b9, 0xdebb9ec6, 0x44042d72, 0xb8bda50d, 0x66063bcb, 0x9abfb3b4, 0x88085ae4, 0x74b1d29b, 0xaa0a4c5d, 0x56b3c422, 0xcc0c7796, 0x30b5ffe9, 0xee0e612f, 0x12b7e950, 
            0xcb61b38f, 0x37d83bf0, 0xe963a536, 0x15da2d49, 0x8f659efd, 0x73dc1682, 0xad678844, 0x51de003b, 0x4369e96b, 0xbfd06114, 0x616bffd2, 0x9dd277ad, 0x76dc419, 0xfbd44c66, 0x256fd2a0, 0xd9d65adf, 
            0x4db26159, 0xb10be926, 0x6fb077e0, 0x9309ff9f, 0x9b64c2b, 0xf50fc454, 0x2bb45a92, 0xd70dd2ed, 0xc5ba3bbd, 0x3903b3c2, 0xe7b82d04, 0x1b01a57b, 0x81be16cf, 0x7d079eb0, 0xa3bc0076, 0x5f058809, 
            0x86d3d2d6, 0x7a6a5aa9, 0xa4d1c46f, 0x58684c10, 0xc2d7ffa4, 0x3e6e77db, 0xe0d5e91d, 0x1c6c6162, 0xedb8832, 0xf262004d, 0x2cd99e8b, 0xd06016f4, 0x4adfa540, 0xb6662d3f, 0x68ddb3f9, 0x94643b86, 
            0x9b64c2b2, 0x67dd4acd, 0xb966d40b, 0x45df5c74, 0xdf60efc0, 0x23d967bf, 0xfd62f979, 0x1db7106, 0x136c9856, 0xefd51029, 0x316e8eef, 0xcdd70690, 0x5768b524, 0xabd13d5b, 0x756aa39d, 0x89d32be2, 
            0x5005713d, 0xacbcf942, 0x72076784, 0x8ebeeffb, 0x14015c4f, 0xe8b8d430, 0x36034af6, 0xcabac289, 0xd80d2bd9, 0x24b4a3a6, 0xfa0f3d60, 0x6b6b51f, 0x9c0906ab, 0x60b08ed4, 0xbe0b1012, 0x42b2986d, 
            0xd6d6a3eb, 0x2a6f2b94, 0xf4d4b552, 0x86d3d2d, 0x92d28e99, 0x6e6b06e6, 0xb0d09820, 0x4c69105f, 0x5edef90f, 0xa2677170, 0x7cdcefb6, 0x806567c9, 0x1adad47d, 0xe6635c02, 0x38d8c2c4, 0xc4614abb, 
            0x1db71064, 0xe10e981b, 0x3fb506dd, 0xc30c8ea2, 0x59b33d16, 0xa50ab569, 0x7bb12baf, 0x8708a3d0, 0x95bf4a80, 0x6906c2ff, 0xb7bd5c39, 0x4b04d446, 0xd1bb67f2, 0x2d02ef8d, 0xf3b9714b, 0xf00f934, 
            0xedb88323, 0x11010b5c, 0xcfba959a, 0x33031de5, 0xa9bcae51, 0x5505262e, 0x8bbeb8e8, 0x77073097, 0x65b0d9c7, 0x990951b8, 0x47b2cf7e, 0xbb0b4701, 0x21b4f4b5, 0xdd0d7cca, 0x3b6e20c, 0xff0f6a73, 
            0x26d930ac, 0xda60b8d3, 0x4db2615, 0xf862ae6a, 0x62dd1dde, 0x9e6495a1, 0x40df0b67, 0xbc668318, 0xaed16a48, 0x5268e237, 0x8cd37cf1, 0x706af48e, 0xead5473a, 0x166ccf45, 0xc8d75183, 0x346ed9fc, 
            0xa00ae27a, 0x5cb36a05, 0x8208f4c3, 0x7eb17cbc, 0xe40ecf08, 0x18b74777, 0xc60cd9b1, 0x3ab551ce, 0x2802b89e, 0xd4bb30e1, 0xa00ae27, 0xf6b92658, 0x6c0695ec, 0x90bf1d93, 0x4e048355, 0xb2bd0b2a, 
            0x6b6b51f5, 0x97d2d98a, 0x4969474c, 0xb5d0cf33, 0x2f6f7c87, 0xd3d6f4f8, 0xd6d6a3e, 0xf1d4e241, 0xe3630b11, 0x1fda836e, 0xc1611da8, 0x3dd895d7, 0xa7672663, 0x5bdeae1c, 0x856530da, 0x79dcb8a5, 
            0x76dc4191, 0x8a65c9ee, 0x54de5728, 0xa867df57, 0x32d86ce3, 0xce61e49c, 0x10da7a5a, 0xec63f225, 0xfed41b75, 0x26d930a, 0xdcd60dcc, 0x206f85b3, 0xbad03607, 0x4669be78, 0x98d220be, 0x646ba8c1, 
            0xbdbdf21e, 0x41047a61, 0x9fbfe4a7, 0x63066cd8, 0xf9b9df6c, 0x5005713, 0xdbbbc9d5, 0x270241aa, 0x35b5a8fa, 0xc90c2085, 0x17b7be43, 0xeb0e363c, 0x71b18588, 0x8d080df7, 0x53b39331, 0xaf0a1b4e, 
            0x3b6e20c8, 0xc7d7a8b7, 0x196c3671, 0xe5d5be0e, 0x7f6a0dba, 0x83d385c5, 0x5d681b03, 0xa1d1937c, 0xb3667a2c, 0x4fdff253, 0x91646c95, 0x6ddde4ea, 0xf762575e, 0xbdbdf21, 0xd56041e7, 0x29d9c998, 
            0xf00f9347, 0xcb61b38, 0xd20d85fe, 0x2eb40d81, 0xb40bbe35, 0x48b2364a, 0x9609a88c, 0x6ab020f3, 0x7807c9a3, 0x84be41dc, 0x5a05df1a, 0xa6bc5765, 0x3c03e4d1, 0xc0ba6cae, 0x1e01f268, 0xe2b87a17
         };

        public static uint crc32(MemoryStream stream)
        {
            return crc32(stream.GetBuffer(), (int) stream.Length);
        }

        public static uint crc32(byte[] buf, int buf_len)
        {
            if ((buf.Length == 0) || (buf_len == 0))
            {
                return 0;
            }
            uint num = seed ^ uint.MaxValue;
            for (int i = 0; (i < buf.Length) && (i < buf_len); i++)
            {
                num = (num >> 8) ^ table[(int) ((IntPtr) ((buf[i] ^ num) & 0xff))];
            }
            return (num ^ uint.MaxValue);
        }

        public static uint crc32(uint seed, string str)
        {
            return crc32(Encoding.Default.GetBytes(str), str.Length);
        }
    }
}

